export function fetchPalantirData() {
  return [
    "/palantir/pltr-home.png",
    "**Preamble**",
    "The forward deployed role is definitely an unusual one. I first heard about it about a year ago, when Bowen, my team lead at our university club Blueprint, announced he was joining Palantir. At the time, I didn’t know what Palantir was—I’d heard the term in Lord of the Rings, but Bowen didn’t exactly strike me as an actor. So when he told me, “I’m a forward deployed software engineer at Palantir,” I only really understood the “software engineer” part. He went on to explain that Palantir is a software company, with roots in government and defence work, hence the term “forward deployed”, a nod to its military origins. Unlike traditional software engineering, being forward deployed means you are interfacing with clients directly.",
    "For Bowen, the forward deployed role helped highlight his “product-first” interest. Coding was a means to an end for him and served as a powerful tool to deliver products to customers. This resonated with me a lot at the time, since most of my tech involvement outside of work revolved around building tools for clients, whether it be [Hack the North](https://eugenezhang.me/hackthenorth) participants or members of the [Children’s Aid Society](https://eugenezhang.me/uwblueprint). Forward deployed seemed to combine the world of business and tech, catering towards technical individuals who also enjoy communicating with their users.",
    "I didn’t think much about Palantir for the next year. I went on to complete internships at [Faire](https://eugenezhang.me/faire) and [ETHGlobal](https://eugenezhang.me/ethglobal), both of which were incredible experiences that taught me a great deal about myself. Faire was structured in a more traditional software engineering way, whereas ETHGlobal embodied the startup culture of “ship often, ship fast”. After completing both internships, I was looking for something in between—a company with structure, but enough flexibility to let me work on problems I find interesting. Fortunately, Palantir does exactly that. And, after a little persuasion from Bowen, I decided to apply and kick off the interview process. A few months later, I found myself packing my bags, ready to board my flight to London and kick off my internship as a forward deployed software engineer at Palantir.",
    "**Interlude**",
    "Before I talk about the work, let me describe the city itself. London, man. What a city. I felt like Harry Potter entering Hogwarts when I stepped out of the train station. Looming above me was the most dastardly-looking clock tower I’d ever seen. Its dark orange exterior cast a sinister glow onto the streets below. Modelled after the town hall at Armentières in north-eastern France, this tower reflected the Victorian style design, a Gothic Revival.",
    "/palantir/pltr-stpancras.jpeg",
    "The unique part about London is that the St. Pancras Clock Tower was one of many architectural wonders in the city. The closer you get to the city centre, the more landmarks you see. In certain areas, I couldn’t walk 5 minutes without seeing a new sight.",
    "London is (allegedly) quite a rainy place, especially during the summer season. Fortunately for me, though, it didn’t rain nearly as much as people had forecasted, and I got plenty of sunshine to explore all around. In contrast to some other major cities, London has a lot of greenery. Specific highlights for me were Hyde Park and Victoria Park, which were super nice to bike around. I also had the chance to explore cities outside of London, such as Oxford, which is very castle-like and has a strong Harry Potter theme. Actually, I couldn’t help but notice that England itself has a lot of Harry Potter references. For one, my Airbnb was located just a five-minute walk from Platform 9¾. Walk a few minutes west and you’ll find the British Library, which holds a collection of Harry Potter books and related items, including early drafts! And of course, there are Harry Potter-themed shops everywhere, including one just a few minutes from my workplace. At first, it was a fun novelty, but when the crowds start blocking your way to work every morning, it becomes a bit less charming. After all, I write code, not spells.",
    "**The work**",
    "Going into the first day, I still wasn’t too sure what the difference was between a software engineer and its forward deployed variant. However, I soon realized that they are completely different roles. Let me break them down.",
    "A software engineer (also referred to as “devs” internally) at Palantir can work on one of four products/services: Foundry, Gotham, Apollo, or internal tooling. Foundry is the main platform that Palantir provides to its commercial clients. You can think of Foundry like a Google Workspace or Microsoft 365, but specifically for data integration. As Palantir calls it, Foundry is “The Ontology-Powered Operating System for the Modern Enterprise”. Gotham is Foundry’s counterpart for government clients. It is very similar to Foundry, but comes in dark mode by default (presumably because it feels more... classified). Apollo was a product built to manage the rapid growth of software like Foundry and Gotham. It does this by orchestrating hundreds of microservices to enable quick deployment updates and also provides full visibility into your deployment landscape. Think of it as the infrastructure layer that supports Palantir’s software. Finally, the internal tooling team builds and maintains tools, libraries, and platform infrastructure to support other Palantir devs. The day-to-day of a dev will vary depending on the team. Devs working on Foundry could be dealing with the backend and frontend aspects of the product or wrangling with the Ontology storage at the database level. On the other hand, devs on Apollo may find themselves scrounging CI/CD logs and debugging Kubernetes clusters. One of the benefits of Palantir is that team changes are common and even quite encouraged, so devs are free to explore their interests to the fullest.",
    "A forward deployed software engineer (also referred to as “deltas” internally) at Palantir works on top of either Foundry or Gotham. Deltas should have a deep understanding of the suite of tools provided and leverage them accordingly based on the client's use case. A big part of the job involves communicating with the client, figuring out where their problem areas lie, and how Foundry (or Gotham) can be used to address these problems. The way deltas tackle problems depends on a few factors:",
    "1. *How big the client is.* The client is paying for Palantir’s services and engineers afterall, so the solutions built may be restricted by budget. For instance, deltas working with a larger client might consider implementing a development, staging, and production environment on Foundry. This might not be feasible for smaller clients, as each environment has its own objects and resources that incur compute costs.",
    "2. *What the timelines look like.* Some projects are more time-critical than others. Sometimes the client might ask to see a minimum viable product (MVP) the week before a quarterly conference. Other times, you may be given up to a year to develop a fully functional and presentable product. As a delta, it is up to you to scope out features and consider scalability in light of a deadline.",
    "3. *The current state of Foundry.* In an ideal world, Foundry is fully developed and has a tool for every use case. Although Foundry is a lot more mature than it was a decade ago, there is still a lot of new development being undertaken. Thus, deltas must make tradeoffs between various tools as they progress through different stages of development.",
    "Ultimately, these three factors stem from a delta's understanding of Foundry. The more comfortable you are with Foundry, the better a delta you become. To grow their understanding of Foundry, deltas are also encouraged to jump between clients. As such, deltas have the chance to work in numerous different industries and learn how to leverage Foundry to solve problems in each respective space.",
    "I had the opportunity to work in the insurance and retail industries, as well as a brief stint on a core product team within Palantir, too.",
    "/palantir/pltr-team.jpeg",
    "**Insurance**",
    "Palantir for insurance is relatively straightforward. Most problems fit into the following framework: the user (brokers, underwriters, etc.) passes data (policies, claims, etc.) to Foundry and expects to receive back information (dashboards, interactive apps, agentive answers, etc.). Ultimately, Foundry is used to streamline processes within insurance, allowing relevant users to focus on analysis rather than tedious, repetitive tasks. For me, the most interesting part of the work was watching how Palantir’s deltas go about their work. One of the biggest things that stood out to me was how different each delta on the team was. My mentor, for instance, was a very technical delta. He spent most of his time building with Foundry and tried to limit the number of meetings he had a day, only conversing with clients on technical discussions. He has a very strong understanding of the platform and often fixes Foundry bugs by diving into the Palantir codebase himself. On the other hand, there are other deltas that spend most of their time in a managerial position. They are often in meetings, whether it be with clients or syncs with other deltas, and spend a lot of time discussing the type of product to be built. These deltas focus more on the high-level, keeping track of delta progress and maintaining a good relationship with the client. It’s super interesting to me how flexible the delta role is. There is no limit to what type of delta you want to be, as long as you’re making an impact.",
    "The highlight of my time in insurance was the opportunity to travel to Zurich, Switzerland, for our quarterly client conference. This was a 2-day event where Palantirians presented fancy metrics, discussed KPIs, and other fancy schmancy but frankly boring topics to showcase Foundry’s capabilities. Although I didn’t do much except dress nicely at this conference, it’s trips like these that really highlight a delta’s importance. Although the statistics are boring, they make it extremely clear how significant an impact Foundry has on its insurance processes. That, combined with some flashy in-person demos, really showcases the power of Palantir: going from nothing to a fully fledged application in under four months. And this is truly only made possible because of the forward deployed model. Think about it like a Korean BBQ restaurant. A typical KBBQ place will provide the meat and expect the customer to cook it properly. However, some restaurants provide the option for their staff to cook the meat for you, guaranteeing a tasty sear in every bite. The latter is how Palantir operates and is the key to Foundry’s growing adoption and success.",
    "Also, another cool thing about conferences is that sometimes they go overtime, which gives you an excuse to convince your team to go on a late-night McDonald's run :v)",
    "/palantir/pltr-mcdonalds.jpeg",
    "**Retail**",
    "When I enrolled in a computer science program, I never would have thought that I would learn how to package shoe boxes in a warehouse, but here I was, packaging shoe boxes in a warehouse in Northern England. This particular company was not actually a client yet, and it was my job to seal the deal. To do so, I had to think like a retail company, and that meant getting my hands dirty, literally. My hands smelled like cardboard for hours.",
    "Working in retail was quite fascinating. I didn’t have any prior retail experience, so it was really cool getting to learn the lifecycle of a product, from the manufacturing process to how they were stowed on shelves in stores worldwide. This particular company owned a warehouse in Northern England and invited me and a few other deltas to come and take a look. And wow, was there a lot to look at. The warehouse was huge, with rows upon rows of boxes, all neatly packed together into a tight grid. These boxes were stacked high, too, up at least two stories. The building also stretched for miles on end horizontally; I couldn’t even see the end from where I was standing. As my eyes adjusted to the grandeur of it all, my ears also picked up the loud humming of the automation. All around me were small robots, moving back and forth, all assigned their own little tasks. Some would pick up and move boxes around, others would push boxes onto forklifts to be carried to another part of the warehouse. And the conveyors. They were everywhere, going up and down, snaking left and right. The space not covered by boxes was filled with conveyors, transporting thousands of boxes to who knows where. I was surprised by just how much automation there was. It makes me wonder what inventory and distribution will look like in another ten years.",
    "Of course, I didn’t just package boxes. After getting a tour of the warehouse, the prospective client explained their troubles with analyzing busy warehouse hotspots. They were currently staffing each shift in the warehouse and allocating workers manually if a shift was understaffed. Essentially, they needed a way to observe the busyness of a shift over time and assign the correct number of staff per shift. I won’t get into the nitty-gritty of the problem, but there were a few tools on Foundry that helped us configure a quick MVP for their use case. Overall, it was really cool to listen to the warehouse workers and learn more about inventory distribution. In many ways, I found myself being a translator of sorts—figuring out how to translate their terminology and day-to-day challenges from the warehouse floor and turning them into integrable solutions within the Foundry Ontology.",
    "/palantir/pltr-retail.jpeg",
    "**Degens**",
    "After spending some time working in insurance and retail, I started to miss working in tech. Sure, you could argue that building in Foundry should count, but I missed collaborating with techie people. So, I decided to pivot and got an opportunity to work on one of Palantir’s core products: Foundry Machinery. Typically, deltas don’t work on core product. However, there is a small group of deltas that, a few years ago, were tasked with building 0-to-1 products that didn’t exist yet. These products were eventually integrated into Foundry itself and are now available as one of the many tools within the Foundry suite. This group of engineers, who didn’t fit into the traditional role of a delta, was dubbed “the Degens”. I would like to think the word was derived from the computer science term “degenerate”, which means a simpler/non-generic case of a structure or problem. In this case, the “forward deployed software engineer” degenerates simply into a “software engineer”. Unfortunately, the word “degen” also has a more commonly used slang term with negative connotations. I’ll stick with the first definition.",
    "I had the opportunity to experience what it’s like to work as a Degen through Foundry Machinery. Machinery is a service on Foundry that provides a visual representation of your automated jobs. This is especially helpful if you are chaining automations or calling some automations in sequence versus in parallel. Machinery helps you understand and manage all aspects of your chained automations. We also had another service on Foundry called Marketplace, which, as the name suggests, is a platform for users to market their Foundry product for others to install. However, Foundry offers a variety of services, and not all of them are marketplace compatible. My job was to make sure that was no longer the case for Machinery.",
    "This task was a nice change of pace from my previous delta work. It was familiar software engineering work, but in an unfamiliar setting. After leveraging Foundry for the past two months, it was refreshing to see how it was built under the hood.",
    "**Final Thoughts**",
    "Being a forward deployed software engineer was cool. I don’t think there is a role quite like this anywhere else, although I am seeing the “forward deployed” label popping up more and more, especially in the startup scene. As amazing as the experience was, I want to reiterate that a forward deployed software engineer is NOT a traditional software engineer, to the point where I would say adding “software engineer” at the end is a little misleading. Yes, you do still build and code, but oftentimes that is not the main role of a delta. Your job is to deliver value to the client, whatever form that may be. This could indeed mean coding and building on Foundry. Alternatively, it could also involve cleaning and parsing CSV data, moving boxes between warehouses, or running errands in hospitals. As a delta, you are tackling the client’s hardest problems. But that doesn’t necessarily mean those problems have software solutions.",
    "This experience has personally been eye-opening. It’s not every day that I get to work in insurance or retail, and it was interesting stepping away from traditional software engineering for a few months. I’m incredibly thankful for this opportunity and the wonderful people I met along the way. My experience in London has been great, and over the past three months, I’ve made friends I’ll definitely be going back to visit again someday!",
    "As for what’s next, I’ll be packing my bags again for a 4-month semester exchange to Hong Kong :)",
    "/palantir/pltr-friends.jpeg",
  ];
}

export function fetchEthglobalData() {
  return [
    "/ethglobal/ethglobal-main.jpeg",
    "**Preamble**",
    "As I sit here at 4:00 AM in the quiet hum of the ETHGlobal venue, I can’t help but ponder life a little bit. Just two weeks ago, I was exploring the beautiful gardens of Singapore. Yesterday, I walked across the Golden Gate Bridge for the first time. In three weeks, I’ll be roaming the streets of Bangkok. So much has happened these past few months, but it’s during still times like these that I can truly sit down and appreciate it all. Two years ago, I was holed up in my room, learning HTML and CSS for the first time. Back then, the most pressing thing in my life was doing well on my high school tests and exams. If you told me that in two years time, I’d be travelling the world, using those same HTML and CSS skills for one of the biggest web3 ecosystems in the world, I would have called you delusional. You’re telling me this dinky 18-year-old has the potential to meet some of the best engineering talent out there? Who, this kid who barely knows how to operate a MacBook, shipping code at that level?",
    "Grit is a crazy thing, truly. I used to get so demotivated back then. Why bother trying, when there are kids who’ve been programming since before they could walk? Monsters who could spin up apps in a few hours, fuelled only on RedBull and chips? The barrier to entry seemed so high. But if there’s one thing I’ve learned, it’s that change is a gradual process. Most people aren’t born monsters; they become them over time. Just keep your head down and push through. We are all capable of such amazing things if only we commit to them. Before you know it, you could be working side-by-side with some of the very monsters you used to fear. Everyone learns at their own pace, you just have to find your rhythm.",
    "**The Work**",
    "That discovery came to me on May 28, 2024. I was in the middle of a nap when my phone buzzed with a Microsoft Outlook notification. Groggily, I sat up, only to see the words “ETHGlobal Offer” in the email header. In that instant, my world shifted—I let out a yell so loud it probably rattled my entire apartment. My hands were trembling, my head spinning. Being a software engineering intern at ETHGlobal has been a dream of mine since I discovered hackathons all those years ago. So many emotions welled up inside me during those few minutes; it’s a moment I wish I could relive.",
    "/ethglobal/ethglobal-tag.jpeg",
    "Enough emotional mumbo jumbo though—let’s talk about what happened after that dream came true. My third co-op at ETHGlobal was nothing short of transformative. ETHGlobal is a web3 events startup made possible by 20 passionate people. As a 20-person startup, everyone has a big part to play, including the interns. I thought my time at [Faire](https://eugenezhang.me/faire) was impactful, but ETHGlobal takes autonomy to another level. From day one, I was shipping code alongside the rest of the engineering team. Everyone on the team is treated as equals, regardless of their prior experience. For example, in my first week, I had the chance to revamp the OTP auth system, modify the user database schema, and write OpenAI classification scripts. I got more work done that week than I ever had for any other internship combined.",
    "**Core Values**",
    "During my four months at ETHGlobal, I distilled our engineering team’s core values into three guiding principles:",
    "1. *Be a sponge: absorb*. You should constantly be trying to learn more about the codebase and technologies used at ETHGlobal. Look into how we model our schema and understand why we chose to use certain patterns. Read documentation and see how we implement things in our code. It’s not about memorizing everything; it’s about absorbing the *why* and *how* behind the work. Curiosity, when nurtured, unlocks endless opportunities for growth.",
    "2. *Unblock yourself asap*. You should never be stuck on something for a long time. If it’s a PR waiting for approval, start on your next task. If you’re lacking context on something, message someone who has it. And most importantly, if you ever run into an error, understand the error. Know why and how the error occurred. You don’t need to know how to solve it, but you must be able to describe what’s happening—visualizing the error in your head will help you pattern-match that error to similar ones in the future. Events are always right around the corner; you should never idle as an engineer.",
    "3. *Ship often, ship fast*. Don’t spend too much time obsessing over a PR. Build the primary functionality of the feature, put up a PR, and merge. If extended functionality is required, build that and merge. If bugs come up, fix them asap. Feature requests are very common and constantly changing scope. As an engineer, be ready to iterate, iterate, iterate.",
    "I think the biggest adjustment I had to make was recognizing that I was a core engineer on the team. If I am assigned a task, I have to own it. The expectation is for me to understand the problem (or fix it if already scoped) and then implement a solution quickly. The deadlines are strict and debugging should be done independently, relying on my engineering manager only when necessary. There is no one-on-one mentor to lean on—you must be able to carry your own weight from the get-go. This is made all the more important when we’re travelling. Over the course of four months, I travelled to three countries, helping organize three main events and six side events. If one of my features/fixes borks our software during the events themselves, it’s completely on me. Our entire team is relying on and expecting me to be able to fix it. You might think that kind of responsibility is earned gradually throughout an internship. Not at ETHGlobal. There’s no time for a slow ramp-up. My first event? Just two weeks after I joined. Singapore was first up, and I had to hit the ground running.",
    "**ETHGlobal Singapore**",
    "ETHGlobal Singapore was the first time I was able to meet most of the team in person and witness the company operate as one cohesive unit. As a hackathon organizer myself, it was super cool seeing how methodical and efficient ETHGlobal hackathons were run. During the event, I spent most of my time at registration, setting up printers, NFC scanners, and laptops. The engineering team primarily takes on IT support roles during the events, so I had a bit of downtime to wander and soak in the atmosphere. And what an atmosphere it was. The venue blew me away as soon as I entered. Nestled within one of the largest luxury shopping malls in Asia, we were located inside Sands Expo, boasting panoramic views of Singapore’s iconic Gardens by the Bay. Inside, it felt like stepping into a palace, with golden pillars stretching skyward, shimmering in the light. Security guards lined the entrance, overseeing a space with breathtaking views of the skyline. This was by far the fanciest hackathon venue I’ve ever seen.",
    "/ethglobal/singapore-bg.jpeg",
    "I was also blown away by ETHGlobal’s logistical work. Despite having only a dozen or so volunteers—hundreds fewer than in an event like Hack the North—everything ran seamlessly, perhaps even more so. I guess this is a testament to the experience they’ve built from hosting 10 events a year.",
    "Singapore was a blast. Although I spent most of my time working, I was able to sightsee a bit, too. Our team hit up two hawker centres, many malls, and even watched the Singapore Grand Prix live!! There wasn’t much time to soak it all in, though. Barely two weeks later, I found myself boarding a plane to San Francisco, preparing for the next event.",
    "/ethglobal/singapore.jpeg",
    "**ETHGlobal San Francisco**",
    "ETHGlobal San Francisco was held at the stunning Palace of Fine Arts. Overlooking the Golden Gate Bridge, the setting was nothing short of magical. The pathway leading to the event doors felt almost surreal, with a circular garden embracing a serene lake, framed by towering statues at every corner. Stepping inside, the venue shifted to a cavernous, warehouse-like space filled with hacking zones and sponsor booths sprawled across the building.",
    "/ethglobal/sf-bg.jpeg",
    "Leading up to ETHGlobal San Francisco, I was tasked with upgrading part of the judge's scoresheet UI. One of the key features I worked on was a judging timer designed to help judges and volunteers coordinate presentations more effectively. The plan was to ship and monitor this feature on Sunday morning to ensure all goes smoothly. I had merged most of the backend changes prior to this weekend, but there was still a lot of frontend left to be done. Thus, as the attendees immersed themselves in their 48-hour hacking marathons, I also spent it grinding alongside them to finish my project. After pulling an all-nighter Saturday night, I was able to merge all the components for the judging scoresheet. However, a logistical hiccup prevented the judges from using the feature during the event. I did, however, get the chance to talk to a few judges after the event and get their opinions on my new feature, noting down any feedback they provided. This feedback helped me iterate and ship the feature in time for the last hackathon of my internship, all the way in Bangkok.",
    "/ethglobal/sf.jpeg",
    "**ETHGlobal Bangkok**",
    "ETHGlobal Bangkok took place alongside another massive event in the Ethereum ecosystem: Devcon 2024. Both events were held at the Queen Sirikit National Convention Center (QNSCC), a monumental venue built by the Thai Ministry of Finance specifically for large-scale events. With 300,000 square meters of enclosed space, the interior is definitely grand. Although Devcon took up most of its seven floors, we managed to reserve an entire floor for ETHGlobal. As of 2024, ETHGlobal Bangkok was the largest event we had ever hosted, with over 2000 attendees and $750,000 in prizes.",
    "/ethglobal/bangkok-bg.jpeg",
    "But with scale comes complexity, and even the best-laid plans are vulnerable to hiccups. Within minutes of registration opening, our NFC scanners malfunctioned. Not long after, the printers began running out of rolls. As the flood of attendees continued, our hacker fast lane scanning system also broke down. To top it off, we didn’t have enough hands to manage both the hacking and sponsor registration booths. With all these errors coming to life, the engineering team was put to work right away. The first six hours of the event had all five of us interns running around fighting as many fires as we could. My job didn’t end there though. While I was running around fixing things, my engineering manager assigned me some bugs to look into that directly impacted the event. So, after registration calmed down, I locked myself in the staff room to fix these bugs. The worst was yet to come though. After wrapping up my work for the day, the logistics team announced that a few members of the engineering team have to stay behind tomorrow for a night shift. We needed a few people to stay back and monitor our tools and manage the help desk. So, I found myself adding the finishing touches to my judging feature longing for the light of the morning sun.",
    "That same Sunday, I had to onboard the volunteers and judges onto the new judging scoresheet UI. Although dreary and barely conscious, I dragged myself to the judging space. I spent the next six hours running around to each judging room, fixing any bugs that arose and ensuring the smoothest user experience I could provide. In the end, although there were a few bumps, our team mentioned how this was the best judging experience we’ve ever had. But honestly, at that moment, I couldn’t have cared less. After 24 hours of building and fixing, all I could think about was sleep.",
    "/ethglobal/bangkok.jpeg",
    "**Final Thoughts**",
    "Man, what a journey it’s been. Through all the ups and downs, I can definitely say this internship was one of a kind. Life-changing, even. Professionally, I enjoyed working with the ETHGlobal team. It’s so cool seeing people in their element, working under the same vision with their own unique strengths. Socially, it was so fun hanging out with the other interns. I had a blast exploring these three cities with all of them and I hope to explore many more with them in the future, whether it be with ETHGlobal or not.",
    "As for the next adventure... London sounds like a great idea.",
    "/ethglobal/interns.jpeg",
  ];
}

export function fetchFaireData() {
  return [
    "/faire/faire-home.jpeg",
    "**Anecdote**",
    "My first day of work kicked off on Tuesday, January 9th, 2024. At 6:50 AM, my alarm buzzed to life, a reminder that my days of sleeping in past 10:00 AM during the school term were officially over. I groggily rolled out of bed and got ready for the big day to come. Outside, light snow was falling, and the sun was tucked behind the clouds, a fitting backdrop to the nervous excitement of my first day. After a quick drive to the train station and topping up my train card, I got onto the 8:14 AM train and made my way to Toronto. I arrived at Union Station around a quarter to nine, leaving me roughly 15 minutes to get to the office. I did a little research the night before and knew it was a 10-minute trip by transit, so I figured I’d get there right on time. Confidently, I opened up Google Maps and hopped on the nearest subway.",
    "With indie pop blasting through my earbuds, I was in a good mood. That feeling was quickly soured when a glance at Google Maps revealed my little blue icon happily drifting *away* from the office. Oops. Realizing my mistake, I hopped off at the next stop and took a look around. Of course, the nearest streetcar heading the right way was a solid 10-minute walk away. Looking around, the sky had turned gloomy, the clouds feeling much more serious than the upbeat music in my ears. With no other choice, I began my snowy trek, grumbling to myself while the weather seemed to laugh along with me. After getting on the right streetcar, I finally made it to the office.. at around 9:30 AM—better late than never.",
    "/faire/faire-lobby.jpeg",
    "As I stepped inside, I took a quick scan around me. The cozy interior heavily contrasted the soggy mess I had become. White walls and oak wood floors blended together to create a clean, modern vibe. Potted plants and glass antiques lined the shelves, giving the space a polished yet inviting feel. Not the smoothest start to the day, but it was already looking up.",
    "Welcome to Faire!",
    "/faire/faire-antique.jpeg",
    "**Preamble**",
    "Faire’s pretty cool, a late-stage YC startup focusing on empowering brands and retailers as a wholesale marketplace. I’ve heard a lot of good things about the company so I was pleasantly surprised when I got an email inviting me to partake in their interview process. The process was refreshingly straightforward: an optional career fair to learn more about the company and culture, a one-hour technical round, and a final recruiter call if they thought you were a good fit. Overall, I liked the vibe of the engineers at the fair and I could definitely see myself learning a lot. So naturally, I accepted the offer.",
    "My second co-op was going to be as a frontend engineering intern at Faire!",
    "**Faire Direct Growth**",
    "Faire was a new experience in many ways. I worked at [Civilia](https://eugenezhang.me/civilia) for my first co-op which was a small transit technology company where the entire team worked together towards a single unified goal. In contrast, Faire’s mid-sized structure introduced me to a new organizational model: pillars and pods. Pillars function as product groups, while pods are smaller teams within those pillars formed to tackle specific problems. I worked on the *Faire Direct Growth pod*, a newer initiative at Faire targeting retailers directly referred to Faire through a brand. It was an interesting shift to collaborate within a structured team composed of engineers, designers, data scientists, product managers, and an engineering manager. As an intern, I was also assigned an *engineering buddy*, or essentially my mentor, for the term.",
    "During my time at Faire, the company operated on a hybrid model, encouraging employees to come into the office at least twice a week. Faire has two Ontario locations—one in Waterloo and another in Toronto. Since I live closer to the Toronto office, I would take the train down to Union Station. Having never worked from an office in person up to now, this was an exciting thought. Being able to meet my team in person as well as the other Faire interns sounded a lot better than being stuck remote the whole day. I was super eager to embrace the office experience.",
    "Not to mention, the Toronto Faire office is nice. The building spans three floors, with the top two dedicated to office space. Like many tech companies, Faire opts for an open-office layout, so my desk was set up next to a few other people. My workspace was equipped with an adjustable desk, a monitor, and a laptop stand—everything I needed to get started.",
    "The bottom floor houses the cafeteria, which offers in-house catering with a rotating buffet-style menu each day. This floor also comes with some fun perks, including a kombucha and cold brew tap, as well as a gaming room equipped with essentials like a ping pong table, foosball, and a Nintendo Switch. Each floor also has snacks and drinks readily available. My daily routine typically started by dropping my backpack off on the third floor, grabbing an iced coffee from the cafeteria, and then walking back up, collecting snacks along the way back to my desk :)",
    "/faire/faire-desk.jpeg",
    "**The Work**",
    "I contributed to two big projects over my term at Faire: an email composer feature and an auto-extend promotion feature. The email composer was a project led by my mentor and aimed to revamp our pre-existing email templates for brands to better personalize their emails. The aim was to *increase email-attributed sign-ups by 18%*. With the feature already scoped by my mentor, my role was to focus on executing the tasks she assigned to me.",
    "On the other hand, the Faire Direct auto-extend promotion feature was a project I owned as the DRE (directly responsible engineer) and assigned to me by my manager. As the central point of contact for anything related to the feature, I was responsible for scoping, planning, and executing the project from start to finish.",
    "Before diving into its implementation, it’s important to understand why the feature was needed. Let’s start with the basics of the regular Faire Direct (FD) promotion discount. If a retailer is referred to Faire through a brand, they are considered an FD retailer. One of the incentives for an FD retailer to start shopping on Faire is the one-week discount on initial purchase of any product offered by their referral brand. However, we noticed some retailers forget or aren’t aware of this discount, letting the opportunity expire, unused. The FD auto-extend promotion feature extends the promotion by an additional three days, giving these FD retailers one last chance to use their discount. The goal is to *boost sign-up to first-order conversion rate by 10%*.",
    "Every intern at Faire receives their own project to DRE, and this was mine. The structure of a typical DRE project is as follows:",
    "1. *Create a scoping document*. Understand the problem and the proposed feature. Once clear, scope out frontend and backend tasks. Outline the expected timeline for development, testing, and launch. Finally, submit this scoping doc to your manager for review.",
    "2. *Create a testing party document*. Features are tested extensively at Faire to ensure the highest quality before launch. DREs typically hold testing syncs called *testing parties* with QA engineers and the rest of your pod to thoroughly test the product and iterate on feedback. As the DRE, it is your job to provide a step-by-step on how to navigate to your feature and outline specific tests for your pod to conduct.",
    "3. *Optional: Submit a localization request*. Some features require copy changes, which need to be translated to appeal to a global audience. As a DRE, you must aggregate all copy changes onto a document and include instructions on how to access the text. Since the localization team may not be technical, keep instructions in layman’s terms.",
    "After the above are completed and timelines approved, you can begin working on the tasks you created. Depending on how big your project is, your manager may assign a few full-time engineers to help you build out the feature. If any of these engineers have any questions, it is your responsibility to unblock them.",
    "My project had some backend components to it as well, so my manager assigned the backend intern to assist me with those tasks. Overall, the project went smoothly and after a week of A/B testing, my feature was shipped out to all brands and retailers!",
    "**Final thoughts**",
    "I had a really great time at Faire. Since all Faire interns are assigned the same tasks as full-time engineers, I got a true sense of what a career in software engineering could look like. Along with the work, we also had a few socials this term, including an all-inclusive week-long retreat in Toronto and some fun hangouts with the other interns too.",
    "/faire/faire-interns.jpeg",
    "However, what really made my experience at Faire was my mentor. Although I pestered her with questions throughout the term, she was always willing to help out. Even though I could see she seemed to be inundated with tasks and meetings each day, she still put aside time to show me the ropes. I learned how to better behave like a software engineer by seeing how she problem-solves and communicates with the rest of our team. Although I’m not returning to Faire next term, I’ll do my best to make sure her efforts weren’t in vain :)",
    "/faire/faire-fd-team.jpeg",
  ];
}

export function fetchCiviliaData() {
  return [
    "/civilia/logo-civilia.jpeg",
    "**Preamble**",
    "The dreaded first co-op. For most, a hastily put-together resume flung desperately at any second glancing employer. Hundreds of uWaterloo co-op students, waiting anxiously to hear back from the select few companies willing to offer them an interview. Welcome to recruiting season.",
    "Searching for employment while only undergoing four months of university learning was an interesting experience. Especially given the mass layoffs and uncertain economy in the tech sector, I was definitely rattled.",
    "It was a combination of my non-existent (relevant) work experience and the above factors that pushed me to apply to ~100 companies. I heard back from three. Luckily for me, I got an offer from one. I coded quite a bit the summer prior and open-sourced all my projects on my [GitHub](https://github.com/Ezzhingy). A recruiter noticed this and reached out for an interview. I went through two interviews with that company before they gave me an offer.",
    "I was employed.",
    "**The work**",
    "I worked my first internship at Civilia as a software developer during the S23 term. Civilia is a transit technology company that provides solutions related to urban mobility. I primarily collaborated with their management and tech teams.",
    "Civilia works a lot with General Transit Feed Specification (GTFS) files, a collection of transit data that contains everything you could want to know about transportation. However, their main way of retrieving and filtering this data has been through the tech team itself; the management team doesn’t understand the intricacies well enough. Thus, there have been some efficiency issues with managing GTFS files. That’s where I come in!",
    "I was tasked with building a GTFS management tool, a file storage system that should be intuitive enough for either team to use, and which would effectively organize and display GTFS data on demand. Users should be able to upload a GTFS file to the tool, edit it, view its corresponding map and tables, and export it as a zip file.",
    "My employer gave me full ownership of this project. I had to scope out how to implement features, how to design the app, and how I wanted to build it.",
    "**The tool**",
    "I decided to build the app in TypeScript—having a statically typed language could prove super beneficial in the long run. I combined this with Node.js and Express.js on the backend, and React, TailwindCSS and ChakraUI on the frontend. I chose not to use a database, since I’d only be storing GTFS archive files, which felt slightly redundant. Instead, I’d have all the files sit in a separate folder. Unfortunately, no database meant I couldn’t leverage any ORM/ODM software. However, I still needed a medium to convert the GTFS files into digestible objects. Thus, I created a custom ORM/ODM-like tool to grapple with the GTFS data and allow me to filter it accordingly.",
    "I spent a lot of my time planning. This project had a lot of parts to it, so it was important for me to organize my thoughts. I also learned to pace myself. Four months for one project is a lot of time, so I had to properly manage my work to maintain good productivity throughout.",
    "By the end of my internship, I had built a fully functioning app that the Civilia team could use. With a few more changes, the team had voiced making the app accessible for public use as well!",
    "**Final thoughts**",
    "I definitely improved a lot as a developer throughout these four months. It felt rewarding taking a project from end-to-end and I’m thankful to have been allowed to be so hands-on with my learning.",
    "Although the internship is over, I’ll always have my GitHub contribution graph as a souvenir for the work I put in 😅",
    "/civilia/contribution-graph.jpeg",
  ];
}

export function fetchUwblueprintData() {
  return [
    "/uwblueprint/bp-preview.jpeg",
    "**Preamble**",
    "I remember stumbling across the engineering building at my university. Aisles of cardboard booths strewn across the hall, students proudly presenting their rehearsed pitch to the crowd of people gathered around. This was our school’s annual design team fair, an event that happens once every term. I made a mental note to check it out sometime.",
    "In my second term, I found myself in the eng building once again. After learning about a few subteams, I turned my attention to a representative from *UWBlueprint*, a software design team dedicated to building technology for social good. I’ve previously done volunteer work for small non-profit organizations, and combined with my interest in computer science, seemed like a fitting opportunity. Unfortunately, this specific design team is known for having a super arduous application process. I didn’t care much for it though and applied regardless; what’s the worst that could happen? I wouldn’t know, since I successfully navigated through it (😋) and became a *software developer* and member of UWBlueprint.",
    "**Timeline**",
    "I worked extensively on the *Children’s Aid Society (CAS)* subteam within Blueprint from January 2023 to December 2023. CAS is an NPO that provides child protection services and we were helping build a platform for their *Supervised Access Program*. I started my first 8 months as a software developer, then moved up as a technical lead for my last 4 months.",
    "/uwblueprint/cas.jpeg",
    "**First term**",
    "During my first term on CAS, our team consisted of 11 students: 1 technical lead with 6 developers and 1 product manager with 3 designers. Up to this point, I’ve only ever had experience creating side projects by myself with the occasional group hackathon, but I’d never coded under someone before and I definitely hadn’t worked in a group as large as CAS either. Essentially, this would be my first time operating in a software team environment.",
    "CAS is built upon a framework consisting of PostgreSQL, Flask (Python), and React (TypeScript). I was familiar with Flask and React (JavaScript), but not TypeScript or Postgres. Furthermore, Docker was used to run our application and standardize the local working environment for all devs, a platform (and concept) that was super foreign to me. To add icing on the cake, I was unfamiliar with version control in a collaborative setting; creating pull requests, dealing with merge conflicts, and git rebasing were all new material. There was a lot of learning to do.",
    "Since you can’t learn without getting your hands dirty, I dived right into the code. Once again, I was in far-off territory; the codebase was extremely large, with dozens of folders and even more files within—and this was just the frontend. It didn’t help that TypeScript has its own unique structure, one that resembles JavaScript enough for me to get the gist, but not enough for me to completely understand. It was like walking through a foggy day—a once amicable environment, now shrouded in an unfamiliar mist.",
    "Most of my tickets were frontend-related this term. This was a purposeful decision, since I wished to work with visual changes, hoping they would be easier to digest, and my tech lead happily obliged. A lot of my first few work sessions were spent badgering my lead with questions: `“How does prop drilling work with this component?”`, `“How do I use conditional rendering here?”`, `“Why does my branch have 100 commits; only two of them are mine??”`, the list goes on.",
    "However, with time I became more comfortable working in TypeScript and manipulating Chakra UI (a React-based design system) components for my own implementations. I learned about the agile methodology and how to pair program with other developers. Things were starting to fall into place.",
    "/uwblueprint/bp-term1.jpeg",
    "**Second term**",
    "My goal this term was to familiarize myself with our backend. As such, many of my tickets were backend-focused. Once again, I kept up my onslaught of questions. Since I’ve worked with Flask in the past, I didn’t have to deal with the initial learning curve of syntax as I did with the frontend. I learned how to create class models, write validation in DTOs, implement CRUD services, and call them through endpoints. Inadvertently, this taught me how to use Postman, manage my local database history, and type terminal-based commands in psql. It was a really productive 4 months, and I began to understand how our app interacts through the many files found in both the backend and frontend.",
    "Not to mention, we had super neat socials this term too!",
    "/uwblueprint/bp-term2.jpeg",
    "**Third term**",
    "Being a technical lead had been in the back of my mind ever since I joined. Now going into my third Blueprint term, I’ve had 8 months of prior CAS full-stack experience, 5 months being a frontend developer at [Hack the North](https://eugenezhang.me/hackthenorth), and 4 months of software developer experience at [Civilia](https://eugenezhang.me/civilia), my first co-op internship. In addition, my prior tech lead had committed to an exchange program this term, thus taking on a more advisory role. It was time to step up.",
    "The responsibilities held by a technical lead were quite daunting. As a lead, you must understand the ins and outs of the project, from low-level implementation to high-level ideas. It is your job to break down the app into manageable tickets, assigning them to developers based on their preferences (stated in the 1:1s you conduct). Since you are working with an NPO, scheduling client meetings and implementing client feedback into your app is also a strict requirement. However, your most important responsibility is to be able to lead a team of developers and cultivate a vibey team culture 😁.",
    "Although I spent the majority of my time helping rather than coding, I incidentally learned a lot of DevOps-related operations: integrating updated dependencies, grappling with Heroku, working with database administrative tasks, and debugging Docker containers.",
    "/uwblueprint/docker-meme.jpeg",
    "When I wasn’t helping or coding, I was constantly brainstorming ways to implement features, reviewing pull requests as they came in, updating documentation and schemas, and planning team socials (I’ve learned that I HATE planning social events; too stressful 😵‍💫).",
    "Overall though, I found being a technical lead super rewarding, and also plenty of fun! It was cool seeing everything come together and it also didn’t hurt to know that we’d be positively impacting dozens of families with our app.",
    "/uwblueprint/bp-term3.jpeg",
    "**Final Thoughts**",
    "UWBlueprint was my first exposure to what software development could look like. It surrounded me with a bunch of people who also liked building things and fostered quite a homely community. I really enjoyed my time here.",
    "Maybe I’ll come back as VPE one day 😋",
  ];
}

export function fetchHackthenorthData() {
  return [
    "/hackthenorth/htn-preview-img.jpeg",
    "**Preamble**",
    "I never would have thought I would be the one to over-engineer the main website for Canada’s biggest hackathon. Being a part of Hack the North’s frontend team always felt so out of reach; I remember looking through their static sites every year with mouth agape, mystified by their creativity and design. I recall scrolling through the [2022 site](https://2022.hackthenorth.com/), my eyes hungrily darting across the screen, trying to take in all the colours blending beautifully together like an aurora borealis. I didn’t know it was possible to code like that.",
    "/hackthenorth/alanTuring.jpeg",
    "However, eventually the shock wore off. From March to October 2023, I was a *frontend developer* and organizer at Hack the North, Canada's biggest hackathon.",
    "**Projects**",
    "Over these past 8 months, I've had the opportunity to work on 4 main projects: the *Hack the North Website*, *Hacker Applications Dashboard*, *Travel Tool*, and *Signage Tool*. Our development process is quite methodical—a tried and true practice that allows us to continue building beautiful websites.",
    "/hackthenorth/10-years-dream.jpeg",
    "1. *design<>frontend handoff*. Super crucial step. Frontend might be responsible for building the website itself, but we wouldn’t have anything to build without the design team (massive kudos to them!!). We usually have a few meetings to discuss feasibility and how well the design will transfer over to development. It’s super cool seeing the designers think and talk amongst themselves—I definitely learned a thing or two about UI/UX from them.",
    "2. *backend<>frontend handoff*. When it comes to retrieving or saving data, the backend team is the one to call. They help fill us in on any endpoints/subscriptions they create, any fields they update, and other mystical backend-y things. For instance, if the frontend team needs to display bus info for a given user, the backend team creates the GraphQL endpoint and decides on the parameters needed. They then convey this information to the frontend team, who calls the endpoint with the given parameters.",
    "3. *Delegation of tasks*. Once the above has been sorted out, the frontend team gets to work. There isn’t a special way we divvy up our tasks—we simply slice the site into equal pieces of work, then assign frontend developers to each respective piece.",
    "**The Work**",
    "I’m going to highlight two experiences that showcase the breadth and depth of work that a frontend developer is responsible for.",
    "*Hack the North Website—Footer*",
    "The static site was the first major project that us frontend devs were tasked to work on. Our magnum opus, one could say. The footer was one of the sections I was assigned.",
    "/hackthenorth/footer.jpeg",
    "This section does a splendid job of combining many aspects of frontend development: layout, alignment, responsiveness, image resolution, and hooks. Here's a little problem snippet example:",
    "The arrangement of organizer boxes seemed quite sporadic to me, with no clear pattern. Thus, I decided to take advantage of the `grid-template-areas` property to forcefully organize the chaos into the following:",
    "/hackthenorth/css-grid.jpeg",
    "One annoying thing I had to consider was optimization. Although making a gorgeous Hack the North site is our top priority, we also want a fast and functional site, to maximize the user experience (and pass Lighthouse tests 😅). Thus, I had to make sure the assets I used wouldn’t make the site explode (ie. resizing, lazy loading images, and reducing the pixels on smaller organizer pictures).",
    "Check out the finished product [here!](https://2023.hackthenorth.com/)",
    "*Travel Tool—DRI*",
    "I was one of the frontend DRIs (directly responsible individuals) for the development of our travel tool. Being a DRI makes you the central point of contact, a beacon of sorts. Thus, it was my responsibility to actively communicate with the other subteams when necessary and ensure our development cycle matches our timelines. For travel tool, this meant reaching out to: the *logistics DRI* to confirm bus locations, capacity, and times, the *backend DRIs* to ask about endpoint descriptions and field name changes, and the *design DRI* to hand off the Figma to the frontend team. Lastly, I, along with my other fellow frontend DRI, had to determine what features we had time to implement and how we wanted to delegate the work; walking a fine line between quality and quantity.",
    "/hackthenorth/travel-tool.jpeg",
    "**Final Thoughts**",
    "Overall, this was honestly one of the most rewarding and unique experiences I've ever had, and I'm so grateful to have been a part of it. It felt surreal at times to be working with such a talented group of people, all while shipping real, impactful sites that impact thousands of hackers across the world.",
    "/hackthenorth/fe.png",
    "And of course, shout-out to the entire team! From seeing the Hack the North community afar as a hacker, to now contributing to the vibes as an organizer, I’ve had such a blast making memories with you all!",
    "/hackthenorth/team.jpg",
    "(although I am coming back as a Frontend Co-Lead, so I’ll be staying around one more year 😁)",
  ];
}

export function fetchPocketdocData() {
  return [
    "/pocketdoc/pocketdoctitle.jpeg",
    "10 million Canadians will be without a family doctor in the next three to four years.​ This crisis disproportionately affects specific communities, including senior citizens, international students, and low-income individuals.​ The healthcare industry is facing a widespread doctor shortage, resulting in burdened healthcare professionals and prolonged wait times. Patient needs must be streamlined — currently, despite the nature of an appointment, doctors still have to go through the diagnostic process, which can be inefficient.​",
    "Introducing PocketDoc.",
    "PocketDoc is a healthcare AI app dedicated to providing patients with accurate medical information about themselves. Jump right into it by calling our AI agent who will ask you about your symptoms and pinpoint the problem. If needed, the agent will also direct you to the nearest clinic to get the appropriate treatment. Once the call is over, PocketDoc saves the conversation and displays some helpful recommendations that the patient can follow before or after their appointment.",
    "We also built an admin dashboard for the doctors themselves, who can toggle optional check-ins with their patients. If a check-in is suggested, our AI agent will call the patient, asking them some follow-up questions to ensure the patient is recovering properly.",
    "We constructed the front end with React, JavaScript, and TailwindCSS. We built the backend with Python, Flask, and MongoDB. We also leveraged Thoughtly for the AI agent communication, Zapier for integration between the agent and the saved transcript, and Google Cloud to grab the data in our backend and store/retrieve it through our database. Finally, we used OpenAI's API to provide recommendations based on the user transcript. The backend is deployed on Heroku and the frontend is on Netlify.",
    "/pocketdoc/pocketdoc-tech.png",
    "We are planning on scaling PocketDoc to a national audience. As we wrap up our financial modelling, we hope to pitch our idea at incubators and toward potential investors.",
  ];
}

export function fetchMemlaneData() {
  return [
    "/memlane/memlane-main.jpg",
    "Hustle culture has engulfed us. The insatiable hunger of accomplishments looms over our everyday lives. With everything happening so quickly, sometimes we really just need to take a walk down memory lane—and that’s exactly what Memory is for.",
    "Memory is a mobile app that helps you discover where memories are made. Memory pins memories to the locations in which they were created, helping you trace the places you’ve been to and the experiences you’ve had. As you travel, you can also explore the memories that others have created nearby and how different spaces evolve over time.",
    "Simply create an account, log in, and journey your experiences as you go! You can also view and react to other people’s memories as you come across them. Sharing and reliving memories has never been easier!",
    "Our app was bootstrapped with Expo and Supabase. It was built using TypeScript & React Native and is accessible for both iOS and Android devices.",
    "Memory intends to polish up certain features (camera & map display). With a few more tweaks, we could potentially be bringing Memory to the general public.",
  ];
}

export function fetchDontLeafMeData() {
  return [
    "/dont-leaf-me/dont-leaf-me-main.jpeg",
    "In a world of fast media, many youth struggle with short attention spans and find it difficult to stay focused. Whether it's doom scrolling on their favourite social media site or meandering away from their workplace, productivity is at an all-time low. To regrow their love for learning, we created Don’t Leaf Me!",
    "One way to prevent users from getting distracted is by blocking unproductive sites—Don’t Leaf Me! helps you do just that. Simply enter in “growth-stunting” (unproductive) browsers into the tool and the next time you try to access these sites, the tool will forcefully remind you to get back on track. However, blocking sites is not enough. Don’t Leaf Me! also uses Google’s Cloud Vision API to detect whether or not you are facing the screen; if you decide to leave the room, the tool will start blaring and alert you to come back. Still having trouble focusing? We added a built-in study session timer to help you track your progress and better manage your time.",
    "We constructed the frontend with React, TypeScript, Chakra UI, styled-components, and webpack. We built the backend with Node.js, Express.js, and the Cloud Vision API from the Google Cloud Platform to detect whether or not a user was in front of the camera.",
    "As we finish polishing up our app, we hope to publish it to the Chrome Web Store and make it available for public use!",
  ];
}

export function fetchSentiviewData() {
  return [
    "/sentiview/sentiview-main.png",
    "Small businesses and local entrepreneurs are an essential facet of our communities, with the COVID-19 Pandemic demonstrating how much we depend on them and vice versa. However, it can often be difficult for these businesses to know the best trajectory for their growth, with no streamlined method currently existing for gathering and analyzing their customers' feedback. SentiView aims to change that.",
    "Small businesses rely greatly on reviews; they tell them what they're doing right and what to improve. SentiView takes in a set of customer reviews and sorts positive reviews from neutral/negative reviews. Then, it finds the top five keywords that occur the most frequently in the review sets, helping business owners swiftly find the root of their problems.",
    "SentiView takes in a set of customer reviews and uses the power of sentiment analysis in order to determine whether or not they are positive or negative. Then, each review is tokenized and cleaned based on a stoplist. The 5 most common positive and negative words are then displayed to the user; they can then select and scroll through the reviews containing the word, gathering a first-hand view of their business's needs and strengths.",
    "/sentiview/sentiview-data.png",
    "We developed the application's frontend using React, Bootstrap, and Tailwind. The backend used a Flask server that hosted the data generated from the Cohere API, which we used for sentiment analysis and tokenization purposes.",
    "Over time, SentiView would like to be able to produce graphs that display trends in customer satisfaction to give small businesses a way to assess their improvement. Essentially, to provide bespoke recommendations to businesses.",
  ];
}

export function fetchJournal4meData() {
  return [
    "/journal4me/bigjournal4me.png",
    "Mental health issues are becoming a more prevalent problem each year. Nearly one in five U.S. adults live with a mental illness, but less than 20% of people actually seek mental health treatment. Furthermore, 47% of Americans believe that seeking therapy is a sign of weakness. Our goal with journal4me is to provide an outlet for people to speak their thoughts; to let it all out.",
    "Journal4me is a journaling app that removes the tediousness of typing out your thoughts. It is well known that journaling can improve one's mental health, but many stray away from the act, intimidated by the monotonous writing involved with jotting down one's feelings. With journal4me, all you need to do is speak! The app automatically processes your words and jots them down for you, so that you can rant about your day effortlessly without having to pause and think about how to spell a word or structure a sentence. At the end of your recording, the app even ranks your mood based on what was depicted from your rant using sentiment analysis!",
    "We developed the application's frontend using React. The backend used a FastAPI server that hosted the data generated from the Cohere and AssemblyAI API, which we used for sentiment analysis and speech-to-text. MongoDB was our database of choice, which we used to store our transcriptions.",
    "To level up journal4me, we could improve the UI to further better the user's journaling experience. Some examples include updating the text as the user speaks, adding a mood board, creating a larger 'emotion rating scale'; there are many improvements that we are considering of making in the future.",
  ];
}
